{"version":3,"sources":["DistributionRegistry.js","distributions/PERT.js","distributions/Gaussian.js","data.js","Graph.js","ProjectEditModal.js","Project.js","ProjectList.js","ProjectDisplay.js","Epic.js","EpicList.js","EpicDisplay.js","App.js","registerServiceWorker.js","index.js"],"names":["src_DistributionRegistry","PERT","_ref","minimum","maximum","mode","_ref$height","height","_classCallCheck","this","v","range","mu","w","betaParams","_this$betaParams","probability_distributions_default","a","rbeta","Gaussian","mean","sd","Gaussian_classCallCheck","rnorm","distributions","epic","result","parametersObject","distributionName","parameters","round","number","precision","shift","reverseShift","numArray","split","Math","percentile","array","length","ceil","tooltipValueFormatter","params","seriesName","value","tooltipFormatter","paramsList","pertFirst","pertParams","gaussianParams","src_Graph_0","react_default","createElement","className","props","label","echarts_for_react_lib_default","style","option","getOption","pertResults","results","pertRoundedValues","map","x","pertPercentages","countHitsAsPercentage","pertGrid","top","bottom","pertMarkLines","generateMarkLines","gaussianResults","gaussianRoundedValues","gaussianPercentages","gaussianGrid","gaussianMarkLines","minLength","min","apply","_toConsumableArray","concat","maxLength","max","legend","selectedMode","tooltip","trigger","formatter","axisPointer","link","xAxisIndex","dataset","source","dimensions","grid","xAxis","type","show","axisLabel","gridIndex","yAxis","series","markLine","lineStyle","color","silent","data","datasetIndex","yAxisIndex","values","count","Set","filter","y","minY","maxY","percentileLabels","forEach","percentileValue","index","push","name","react","src_ProjectEditModal","ProjectEditModal","_this","ProjectEditModal_classCallCheck","ProjectEditModal_getPrototypeOf","call","state","project","handleChangeID","bind","ProjectEditModal_assertThisInitialized","handleChangeEpic","handleOkay","event","newID","target","setState","prevState","Object","assign","id","epicIndex","newValue","valueAsNumber","epics","onUpdate","_this2","epicInputs","key","size","onChange","lib_default","isOpen","onClick","onCancel","renderPercentiles","Fragment","src_Project_0","epicCounts","selected","renderPERTPercentiles","renderGaussianPercentiles","onEdit","onDelete","src_ProjectList_0","epicHeaders","projects","onProjectEdit","onProjectDelete","rowSpan","colSpan","src_ProjectDisplay","ProjectDisplay","ProjectDisplay_classCallCheck","ProjectDisplay_getPrototypeOf","iterations","editProjectID","handleProjectEdit","ProjectDisplay_assertThisInitialized","handleProjectEditCancel","handleProjectEditUpdate","handleProjectDelete","projectID","updatedProject","projectResults","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","next","done","projectDistributions","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","entries","_ref2","_slicedToArray","epicDistributions","distribution","i","err","return","projectResult","_loop2","Array","from","reduce","accumulator","sample","sort","b","generateProjectResults","selectedProjects","selectedResults","editing","editProject","find","Epic_renderPercentiles","src_Epic_0","renderPERT","renderGaussian","src_EpicList_0","src_EpicDisplay","EpicDisplay","EpicDisplay_classCallCheck","EpicDisplay_possibleConstructorReturn","EpicDisplay_getPrototypeOf","epicResults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","epicResult","_loop","generateEpicResults","selectedEpics","src_App_0","EPICS","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","setAppElement","react_dom_default","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.23ca9ae3.chunk.js","sourcesContent":["import PERT from './distributions/PERT';\r\nimport Gaussian from './distributions/Gaussian';\r\n\r\nvar DistributionRegistry = {\r\n  PERT: PERT,\r\n  Gaussian: Gaussian,\r\n};\r\n\r\nexport default DistributionRegistry;\r\n","import PD from 'probability-distributions';\r\n\r\nclass PERT {\r\n  constructor({ minimum, maximum, mode, height = 4 }) {\r\n    // Calculate parameters for the beta-curve\r\n    // Reference https://www.riskamp.com/beta-pert#the-beta-pert-distribution-in-r\r\n    // Handy, since the probability-distributions code provides the same API as R\r\n\r\n    const range = maximum - minimum;\r\n    const mu = (minimum + maximum + height * mode) / (height + 2);\r\n    var v;\r\n    if (mu === mode) {\r\n      v = height / 2 + 1;\r\n    } else {\r\n      v =\r\n        (mu - minimum) * (2 * mode - minimum - maximum) / ((mode - mu) * range);\r\n    }\r\n\r\n    const w = v * (maximum - mu) / (mu - minimum);\r\n\r\n    // Variables we need for the sampling\r\n    this.betaParams = {\r\n      v: v,\r\n      w: w,\r\n      range: range,\r\n      minimum: minimum,\r\n    };\r\n  }\r\n\r\n  sample() {\r\n    var { v, w, range, minimum } = this.betaParams;\r\n    return PD.rbeta(1, v, w)[0] * range + minimum;\r\n  }\r\n}\r\n\r\nexport default PERT;\r\n","import PD from 'probability-distributions';\r\n\r\nclass Gaussian {\r\n  constructor({ mean, sd }) {\r\n    this.mean = mean;\r\n    this.sd = sd;\r\n  }\r\n\r\n  sample() {\r\n    return PD.rnorm(1, this.mean, this.sd)[0];\r\n  }\r\n}\r\n\r\nexport default Gaussian;\r\n","import DistributionRegistry from './DistributionRegistry';\r\n\r\nfunction distributions(epic) {\r\n  const result = {};\r\n  const parametersObject = epic['parameters'];\r\n  for (const distributionName in parametersObject) {\r\n    const parameters = parametersObject[distributionName];\r\n    result[distributionName] = new DistributionRegistry[distributionName](\r\n      parameters\r\n    );\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction generateEpicResults(epics, iterations) {\r\n  const epicResults = [];\r\n  for (const epic of epics) {\r\n    const epicResult = {};\r\n    const epicDistributions = distributions(epic);\r\n    for (const distributionName in epicDistributions) {\r\n      const distribution = epicDistributions[distributionName];\r\n      epicResult[distributionName] = Array.from({ length: iterations }, () =>\r\n        distribution.sample()\r\n      ).sort(function(a, b) {\r\n        return a - b;\r\n      });\r\n    }\r\n    epicResults.push(epicResult);\r\n  }\r\n\r\n  return epicResults;\r\n}\r\n\r\nfunction generateProjectResults(epics, projects, iterations) {\r\n  const projectResults = [];\r\n  for (const project of projects) {\r\n    const projectDistributions = {};\r\n    for (const [epicIndex, count] of project['epics'].entries()) {\r\n      const epic = epics[epicIndex];\r\n      const epicDistributions = distributions(epic);\r\n      for (const distributionName in epicDistributions) {\r\n        const distribution = epicDistributions[distributionName];\r\n        if (!(distributionName in projectDistributions)) {\r\n          projectDistributions[distributionName] = [];\r\n        }\r\n        for (var i = 0; i < count; i++) {\r\n          projectDistributions[distributionName].push(distribution);\r\n        }\r\n      }\r\n    }\r\n    const projectResult = {};\r\n    for (const distributionName in projectDistributions) {\r\n      const distributions = projectDistributions[distributionName];\r\n      projectResult[distributionName] = Array.from(\r\n        { length: iterations },\r\n        () => {\r\n          return distributions.reduce((accumulator, distribution) => {\r\n            return accumulator + distribution.sample();\r\n          }, 0);\r\n        }\r\n      ).sort(function(a, b) {\r\n        return a - b;\r\n      });\r\n    }\r\n    projectResults.push(projectResult);\r\n  }\r\n\r\n  return projectResults;\r\n}\r\n\r\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round#A_better_solution\r\nfunction round(number, precision) {\r\n  var shift = function(number, precision, reverseShift) {\r\n    if (reverseShift) {\r\n      precision = -precision;\r\n    }\r\n    const numArray = ('' + number).split('e');\r\n    return +(\r\n      numArray[0] +\r\n      'e' +\r\n      (numArray[1] ? +numArray[1] + precision : precision)\r\n    );\r\n  };\r\n  return shift(Math.round(shift(number, precision, false)), precision, true);\r\n}\r\n\r\n// Based on https://en.wikipedia.org/wiki/Percentile#The_nearest-rank_method\r\nfunction percentile(array, percentile) {\r\n  if (percentile <= 0) {\r\n    return array[0];\r\n  }\r\n  if (percentile >= 100) {\r\n    return array[array.length - 1];\r\n  }\r\n  const rank = Math.ceil(percentile / 100 * array.length);\r\n  return array[rank];\r\n}\r\n\r\nexport { generateEpicResults, generateProjectResults, round, percentile };\r\n","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport { round, percentile } from './data';\r\n\r\nimport './Graph.css';\r\n\r\nfunction tooltipValueFormatter(params) {\r\n  return params.seriesName + ': ' + params.value[1] + '%';\r\n}\r\n\r\nfunction tooltipFormatter(paramsList) {\r\n  // Ordering in the tool tip varies by which graph we're over\r\n  const pertFirst = paramsList[0].seriesName === 'PERT';\r\n  const pertParams = paramsList[pertFirst ? 0 : 1];\r\n  const gaussianParams = paramsList[pertFirst ? 1 : 0];\r\n  return (\r\n    '' +\r\n    pertParams.value[0] +\r\n    ' days:<br/>' +\r\n    tooltipValueFormatter(pertParams) +\r\n    '<br/>' +\r\n    tooltipValueFormatter(gaussianParams)\r\n  );\r\n}\r\n\r\nclass Graph extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Graph\">\r\n        <p>Rendering {this.props.label}</p>\r\n        <ReactEcharts style={{ height: '600px' }} option={this.getOption()} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getOption() {\r\n    const pertResults = this.props.results['PERT'];\r\n    const pertRoundedValues = pertResults.map(x => round(x, 1));\r\n    const pertPercentages = this.countHitsAsPercentage(pertRoundedValues);\r\n    const pertGrid = { top: '10%', bottom: '40%', height: '30%' };\r\n    const pertMarkLines = this.generateMarkLines(\r\n      pertResults,\r\n      pertGrid['bottom'],\r\n      pertGrid['top']\r\n    );\r\n\r\n    const gaussianResults = this.props.results['Gaussian'];\r\n    const gaussianRoundedValues = gaussianResults.map(x => round(x, 1));\r\n    const gaussianPercentages = this.countHitsAsPercentage(\r\n      gaussianRoundedValues\r\n    );\r\n    const gaussianGrid = { top: '60%', bottom: '90%', height: '30%' };\r\n    const gaussianMarkLines = this.generateMarkLines(\r\n      gaussianResults,\r\n      gaussianGrid['bottom'],\r\n      gaussianGrid['top']\r\n    );\r\n\r\n    const minLength = Math.min(...pertRoundedValues, ...gaussianRoundedValues);\r\n    const maxLength = Math.max(...pertRoundedValues, ...gaussianRoundedValues);\r\n\r\n    return {\r\n      legend: { selectedMode: false },\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        formatter: tooltipFormatter,\r\n      },\r\n      axisPointer: {\r\n        link: { xAxisIndex: 'all' },\r\n      },\r\n      dataset: [\r\n        {\r\n          source: pertPercentages,\r\n          dimensions: [null, 'PERT'],\r\n        },\r\n        {\r\n          source: gaussianPercentages,\r\n          dimensions: [null, 'Gaussian'],\r\n        },\r\n      ],\r\n      grid: [pertGrid, gaussianGrid],\r\n      xAxis: [\r\n        {\r\n          type: 'value',\r\n          min: minLength,\r\n          max: maxLength,\r\n          axisPointer: { show: true },\r\n          axisLabel: { formatter: '{value}d' },\r\n        },\r\n        {\r\n          type: 'value',\r\n          gridIndex: 1,\r\n          min: minLength,\r\n          max: maxLength,\r\n          axisPointer: { show: true },\r\n          axisLabel: { formatter: '{value}d' },\r\n        },\r\n      ],\r\n      yAxis: [\r\n        { axisLabel: { formatter: '{value}%' } },\r\n        { gridIndex: 1, axisLabel: { formatter: '{value}%' } },\r\n      ],\r\n      series: [\r\n        {\r\n          type: 'bar',\r\n          markLine: {\r\n            lineStyle: { color: 'black' },\r\n            silent: true,\r\n            data: pertMarkLines,\r\n          },\r\n        },\r\n        {\r\n          type: 'bar',\r\n          datasetIndex: 1,\r\n          xAxisIndex: 1,\r\n          yAxisIndex: 1,\r\n          markLine: {\r\n            lineStyle: { color: 'black' },\r\n            silent: true,\r\n            data: gaussianMarkLines,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  countHitsAsPercentage(values) {\r\n    // https://stackoverflow.com/a/35101824/166389\r\n    // Although returns the list of key/value pairs, not a Map\r\n    const count = values.length;\r\n    return [...new Set(values)].map(x => [\r\n      x,\r\n      values.filter(y => y === x).length * 100 / count,\r\n    ]);\r\n  }\r\n\r\n  generateMarkLines(values, minY, maxY) {\r\n    const percentiles = [3, 50, 80, 97];\r\n    const percentileLabels = ['3rd', '50th', '80th', '97th'];\r\n\r\n    const result = [];\r\n    percentiles.forEach((percentileValue, index) => {\r\n      const value = round(percentile(values, percentileValue), 1);\r\n      result.push([\r\n        { xAxis: value, y: minY, name: percentileLabels[index] },\r\n        { xAxis: value, y: maxY },\r\n      ]);\r\n    });\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nclass ProjectEditModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.handleChangeID = this.handleChangeID.bind(this);\r\n    this.handleChangeEpic = this.handleChangeEpic.bind(this);\r\n    this.handleOkay = this.handleOkay.bind(this);\r\n  }\r\n\r\n  handleChangeID(event) {\r\n    const newID = event.target.value;\r\n    this.setState((prevState, props) => {\r\n      const newProject = Object.assign({}, prevState.project, {\r\n        id: newID,\r\n      });\r\n      return { project: newProject };\r\n    });\r\n  }\r\n\r\n  handleChangeEpic(epicIndex, event) {\r\n    const newValue = event.target.valueAsNumber;\r\n    this.setState((prevState, props) => {\r\n      const newProject = Object.assign({}, prevState.project, {\r\n        epics: prevState.project.epics.map(\r\n          (value, index) => (index === epicIndex ? newValue : value)\r\n        ),\r\n      });\r\n      return { project: newProject };\r\n    });\r\n  }\r\n\r\n  handleOkay() {\r\n    this.props.onUpdate(this.state.project);\r\n  }\r\n\r\n  render() {\r\n    const epicInputs = [];\r\n    this.props.epics.forEach((epic, index) => {\r\n      epicInputs.push(\r\n        <div key={index}>\r\n          {epic.size}:\r\n          <input\r\n            type=\"number\"\r\n            value={this.state.project.epics[index]}\r\n            onChange={event => this.handleChangeEpic(index, event)}\r\n            min={0}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ReactModal isOpen={true}>\r\n        <div>\r\n          Project ID:\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.project.id}\r\n            onChange={this.handleChangeID}\r\n          />\r\n        </div>\r\n        {epicInputs}\r\n        <div>\r\n          <button onClick={this.handleOkay}>Okay</button>\r\n          <button onClick={this.props.onCancel}>Cancel</button>\r\n        </div>\r\n      </ReactModal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectEditModal;\r\n","import React, { Component } from 'react';\r\nimport { percentile, round } from './data';\r\nimport './Project.css';\r\n\r\nfunction renderPercentiles(results) {\r\n  return (\r\n    <>\r\n      <td>{round(percentile(results, 3), 1)}</td>\r\n      <td>{round(percentile(results, 50), 1)}</td>\r\n      <td>{round(percentile(results, 80), 1)}</td>\r\n      <td>{round(percentile(results, 97), 1)}</td>\r\n    </>\r\n  );\r\n}\r\n\r\nclass Project extends Component {\r\n  renderPERTPercentiles() {\r\n    return renderPercentiles(this.props.results.PERT);\r\n  }\r\n\r\n  renderGaussianPercentiles() {\r\n    return renderPercentiles(this.props.results.Gaussian);\r\n  }\r\n\r\n  render() {\r\n    const epicCounts = [];\r\n    const project = this.props.project;\r\n    project.epics.forEach((count, index) => {\r\n      epicCounts.push(<td key={index}>{count}</td>);\r\n    });\r\n    return (\r\n      <tr\r\n        className={this.props.selected ? 'Project Project-Selected' : 'Project'}\r\n      >\r\n        <td>{project.id}</td>\r\n        {epicCounts}\r\n        {this.renderPERTPercentiles()}\r\n        {this.renderGaussianPercentiles()}\r\n        <td>\r\n          <button onClick={this.props.onEdit}>Edit...</button>\r\n          <button onClick={this.props.onDelete}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","import React, { Component } from 'react';\r\nimport './ProjectList.css';\r\nimport Project from './Project';\r\n\r\nclass ProjectList extends Component {\r\n  render() {\r\n    const epicHeaders = [];\r\n    this.props.epics.forEach((epic, index) => {\r\n      epicHeaders.push(<th key={index}>{epic.size}</th>);\r\n    });\r\n    const projects = [];\r\n    this.props.projects.forEach((project, index) => {\r\n      projects.push(\r\n        <Project\r\n          key={project.id}\r\n          project={project}\r\n          epics={this.props.epics}\r\n          results={this.props.results[index]}\r\n          selected={index === this.props.selected}\r\n          onEdit={() => this.props.onProjectEdit(project.id)}\r\n          onDelete={() => this.props.onProjectDelete(project.id)}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"ProjectList\">\r\n        <h2>Projects</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th rowSpan=\"3\">ID</th>\r\n              <th colSpan={epicHeaders.length}>Parameters</th>\r\n              <th colSpan=\"8\">Percentiles</th>\r\n              <th rowSpan=\"3\">Actions</th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan={epicHeaders.length}>Epics</th>\r\n              <th colSpan=\"4\">PERT</th>\r\n              <th colSpan=\"4\">Gaussian</th>\r\n            </tr>\r\n            <tr>\r\n              {epicHeaders}\r\n              <th>3rd</th>\r\n              <th>50th</th>\r\n              <th>80th</th>\r\n              <th>97th</th>\r\n              <th>3rd</th>\r\n              <th>50th</th>\r\n              <th>80th</th>\r\n              <th>97th</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{projects}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Graph from './Graph';\r\nimport ProjectEditModal from './ProjectEditModal';\r\nimport ProjectList from './ProjectList';\r\nimport { generateProjectResults } from './data';\r\n\r\nclass ProjectDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: 0,\r\n      iterations: 2000,\r\n      projects: [\r\n        { id: 1, epics: [1, 0, 0, 0, 0] },\r\n        { id: 2, epics: [0, 1, 0, 0, 0] },\r\n        { id: 3, epics: [0, 0, 1, 0, 0] },\r\n        { id: 4, epics: [0, 0, 0, 1, 0] },\r\n        { id: 5, epics: [0, 0, 0, 0, 1] },\r\n        { id: 6, epics: [1, 1, 1, 1, 1] },\r\n      ],\r\n      editProjectID: null,\r\n    };\r\n\r\n    this.handleProjectEdit = this.handleProjectEdit.bind(this);\r\n    this.handleProjectEditCancel = this.handleProjectEditCancel.bind(this);\r\n    this.handleProjectEditUpdate = this.handleProjectEditUpdate.bind(this);\r\n    this.handleProjectDelete = this.handleProjectDelete.bind(this);\r\n  }\r\n\r\n  handleProjectEdit(projectID) {\r\n    this.setState({ editProjectID: projectID });\r\n  }\r\n\r\n  handleProjectEditCancel() {\r\n    this.setState({ editProjectID: null });\r\n  }\r\n\r\n  handleProjectEditUpdate(updatedProject) {\r\n    this.setState((prevState, props) => {\r\n      const newProjects = prevState.projects.map(\r\n        project =>\r\n          project.id === prevState.editProjectID ? updatedProject : project\r\n      );\r\n      return { projects: newProjects, editProjectID: null };\r\n    });\r\n  }\r\n\r\n  handleProjectDelete(projectID) {\r\n    this.setState((prevState, props) => {\r\n      const newProjects = prevState.projects.filter(\r\n        project => project.id !== projectID\r\n      );\r\n      return { projects: newProjects };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const selected = this.state.selected;\r\n    const iterations = this.state.iterations;\r\n    const projects = this.state.projects;\r\n    const epics = this.props.epics;\r\n\r\n    const results = generateProjectResults(epics, projects, iterations);\r\n    const selectedProjects = projects[selected];\r\n    const selectedResults = results[selected];\r\n\r\n    const editing = this.state.editProjectID !== null;\r\n    const editProject = editing\r\n      ? this.state.projects.find(\r\n          project => project.id === this.state.editProjectID\r\n        )\r\n      : null;\r\n\r\n    return (\r\n      <div className=\"ProjectDisplay\">\r\n        <Graph\r\n          label={'Project ' + selectedProjects.id}\r\n          results={selectedResults}\r\n        />\r\n        <ProjectList\r\n          epics={epics}\r\n          projects={projects}\r\n          results={results}\r\n          selected={selected}\r\n          onProjectEdit={this.handleProjectEdit}\r\n          onProjectDelete={this.handleProjectDelete}\r\n        />\r\n        {editing && (\r\n          <ProjectEditModal\r\n            epics={epics}\r\n            project={editProject}\r\n            onUpdate={this.handleProjectEditUpdate}\r\n            onCancel={this.handleProjectEditCancel}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDisplay;\r\n","import React, { Component } from 'react';\r\nimport { percentile, round } from './data';\r\nimport './Epic.css';\r\n\r\nfunction renderPercentiles(results) {\r\n  return (\r\n    <>\r\n      <td>{round(percentile(results, 3), 1)}</td>\r\n      <td>{round(percentile(results, 50), 1)}</td>\r\n      <td>{round(percentile(results, 80), 1)}</td>\r\n      <td>{round(percentile(results, 97), 1)}</td>\r\n    </>\r\n  );\r\n}\r\n\r\nclass Epic extends Component {\r\n  renderPERT() {\r\n    const parameters = this.props.epic.parameters.PERT;\r\n    return (\r\n      <>\r\n        <td>{parameters.minimum}</td>\r\n        <td>{parameters.maximum}</td>\r\n        <td>{parameters.mode}</td>\r\n        <td>{parameters.height}</td>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderPERTPercentiles() {\r\n    return renderPercentiles(this.props.results.PERT);\r\n  }\r\n\r\n  renderGaussian() {\r\n    const parameters = this.props.epic.parameters.Gaussian;\r\n    return (\r\n      <>\r\n        <td>{parameters.mean}</td>\r\n        <td>{parameters.sd}</td>\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderGaussianPercentiles() {\r\n    return renderPercentiles(this.props.results.Gaussian);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <tr className={this.props.selected ? 'Epic Epic-Selected' : 'Epic'}>\r\n        <td>{this.props.epic.size}</td>\r\n        {this.renderPERT()}\r\n        {this.renderGaussian()}\r\n        {this.renderPERTPercentiles()}\r\n        {this.renderGaussianPercentiles()}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Epic;\r\n","import React, { Component } from 'react';\r\nimport './EpicList.css';\r\nimport Epic from './Epic';\r\n\r\nclass EpicList extends Component {\r\n  render() {\r\n    const epics = [];\r\n    this.props.epics.forEach((epic, index) => {\r\n      epics.push(\r\n        <Epic\r\n          key={index}\r\n          epic={epic}\r\n          results={this.props.results[index]}\r\n          selected={index === this.props.selected ? true : false}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"EpicList\">\r\n        <h2>Epics</h2>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th rowSpan=\"3\">Size</th>\r\n              <th colSpan=\"6\">Parameters</th>\r\n              <th colSpan=\"8\">Percentiles</th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"4\">PERT</th>\r\n              <th colSpan=\"2\">Gaussian</th>\r\n              <th colSpan=\"4\">PERT</th>\r\n              <th colSpan=\"4\">Gaussian</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Min</th>\r\n              <th>Max</th>\r\n              <th>Mode</th>\r\n              <th>Height</th>\r\n              <th>Mean</th>\r\n              <th>Std. dev.</th>\r\n              <th>3rd</th>\r\n              <th>50th</th>\r\n              <th>80th</th>\r\n              <th>97th</th>\r\n              <th>3rd</th>\r\n              <th>50th</th>\r\n              <th>80th</th>\r\n              <th>97th</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{epics}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EpicList;\r\n","import React, { Component } from 'react';\r\nimport Graph from './Graph';\r\nimport EpicList from './EpicList';\r\nimport { generateEpicResults } from './data';\r\n\r\nclass EpicDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: 0,\r\n      iterations: 2000,\r\n    };\r\n  }\r\n  render() {\r\n    // State\r\n    const selected = this.state.selected;\r\n    const iterations = this.state.iterations;\r\n\r\n    const epics = this.props.epics;\r\n    const results = generateEpicResults(epics, iterations);\r\n    const selectedEpics = epics[selected];\r\n    const selectedResults = results[selected];\r\n\r\n    return (\r\n      <div className=\"EpicDisplay\">\r\n        <Graph\r\n          label={'Epic: ' + selectedEpics.size}\r\n          results={selectedResults}\r\n        />\r\n        <EpicList epics={epics} results={results} selected={selected} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EpicDisplay;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport ProjectDisplay from './ProjectDisplay';\r\nimport EpicDisplay from './EpicDisplay';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    // Future state\r\n    const EPICS = [\r\n      {\r\n        size: 'XS',\r\n        parameters: {\r\n          PERT: { minimum: 4, mode: 5, maximum: 10, height: 24 },\r\n          Gaussian: { mean: 5, sd: 0.5 },\r\n        },\r\n      },\r\n      {\r\n        size: 'S',\r\n        parameters: {\r\n          PERT: { minimum: 7, mode: 9, maximum: 25, height: 15 },\r\n          Gaussian: { mean: 9, sd: 0.9 },\r\n        },\r\n      },\r\n      {\r\n        size: 'M',\r\n        parameters: {\r\n          PERT: { minimum: 15, mode: 16, maximum: 40, height: 8 },\r\n          Gaussian: { mean: 16, sd: 1.6 },\r\n        },\r\n      },\r\n      {\r\n        size: 'L',\r\n        parameters: {\r\n          PERT: { minimum: 25, mode: 30, maximum: 60, height: 4 },\r\n          Gaussian: { mean: 30, sd: 3 },\r\n        },\r\n      },\r\n      {\r\n        size: 'XL',\r\n        parameters: {\r\n          PERT: { minimum: 50, mode: 50, maximum: 100, height: 1 },\r\n          Gaussian: { mean: 50, sd: 5 },\r\n        },\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Stefano's Monte Carlo thing</h1>\r\n        </header>\r\n        <div className=\"App-left\">\r\n          <ProjectDisplay epics={EPICS} />\r\n        </div>\r\n        <div className=\"App-right\">\r\n          <EpicDisplay epics={EPICS} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactModal from 'react-modal';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactModal.setAppElement('#root');\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}