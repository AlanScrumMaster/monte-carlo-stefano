{"version":3,"sources":["Epic.module.scss","EpicList.module.scss","Project.module.scss","ProjectList.module.scss","Graph.module.scss","DistributionRegistry.js","distributions/PERT.js","distributions/Gaussian.js","data.js","Graph.js","ProjectEditModal.js","Project.js","ProjectList.js","ProjectDisplay.js","Epic.js","EpicList.js","EpicDisplay.js","App.js","registerServiceWorker.js","index.js","App.module.scss"],"names":["module","exports","selected","epicList","ProjectList","graph","src_DistributionRegistry","PERT","_ref","minimum","maximum","mode","_ref$height","height","_classCallCheck","this","v","range","mu","w","betaParams","_this$betaParams","probability_distributions_default","a","rbeta","Gaussian","mean","sd","Gaussian_classCallCheck","rnorm","distributions","epic","result","parametersObject","distributionName","parameters","round","number","precision","shift","reverseShift","numArray","split","Math","percentile","array","length","ceil","tooltipValueFormatter","params","seriesName","value","tooltipFormatter","paramsList","pertFirst","pertParams","gaussianParams","src_Graph","react_default","createElement","className","Graph_module_default","props","label","echarts_for_react_lib_default","style","option","getOption","pertResults","results","pertRoundedValues","map","x","pertPercentages","countHitsAsPercentage","pertGrid","top","bottom","pertMarkLines","generateMarkLines","gaussianResults","gaussianRoundedValues","gaussianPercentages","gaussianGrid","gaussianMarkLines","minLength","min","apply","_toConsumableArray","concat","maxLength","max","legend","selectedMode","tooltip","trigger","formatter","axisPointer","link","xAxisIndex","dataset","source","dimensions","grid","xAxis","type","show","axisLabel","gridIndex","yAxis","series","markLine","lineStyle","color","silent","data","datasetIndex","yAxisIndex","values","count","Set","filter","y","minY","maxY","percentileLabels","forEach","percentileValue","index","push","name","react","src_ProjectEditModal","ProjectEditModal","_this","ProjectEditModal_classCallCheck","ProjectEditModal_getPrototypeOf","call","state","project","handleChangeID","bind","ProjectEditModal_assertThisInitialized","handleChangeEpic","handleOkay","event","newID","target","setState","prevState","Object","assign","id","epicIndex","newValue","valueAsNumber","epics","onUpdate","_this2","epicInputs","key","size","onChange","lib_default","isOpen","onClick","onCancel","renderPercentiles","Fragment","src_Project","epicCounts","Project_module_default","undefined","renderPERTPercentiles","renderGaussianPercentiles","onEdit","onDelete","src_ProjectList","epicHeaders","projects","onProjectEdit","onProjectDelete","ProjectList_module_default","rowSpan","colSpan","src_ProjectDisplay","ProjectDisplay","ProjectDisplay_classCallCheck","ProjectDisplay_getPrototypeOf","iterations","editProjectID","handleProjectEdit","ProjectDisplay_assertThisInitialized","handleProjectEditCancel","handleProjectEditUpdate","handleProjectDelete","projectID","updatedProject","projectResults","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","projectDistributions","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","entries","_ref2","_slicedToArray","epicDistributions","distribution","i","err","return","projectResult","_loop2","Array","from","reduce","accumulator","sample","sort","b","generateProjectResults","selectedProjects","selectedResults","editing","editProject","find","Epic_renderPercentiles","src_Epic","Epic_module_default","renderPERT","renderGaussian","src_EpicList","EpicList_module_default","src_EpicDisplay","EpicDisplay","EpicDisplay_classCallCheck","EpicDisplay_possibleConstructorReturn","EpicDisplay_getPrototypeOf","epicResults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","epicResult","_loop","generateEpicResults","selectedEpics","src_App","EPICS","App_module_default","App","header","title","left","right","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","setAppElement","react_dom_default","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","intro"],"mappings":"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","file":"static/js/main.2e019181.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Epic_selected__2G9g_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"epicList\":\"EpicList_epicList__29LRR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Project_selected__kkG2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectList\":\"ProjectList_ProjectList__1YobY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"Graph_graph__tkRTw\"};","import PERT from './distributions/PERT';\nimport Gaussian from './distributions/Gaussian';\n\nvar DistributionRegistry = {\n  PERT: PERT,\n  Gaussian: Gaussian,\n};\n\nexport default DistributionRegistry;\n","import PD from 'probability-distributions';\n\nclass PERT {\n  constructor({ minimum, maximum, mode, height = 4 }) {\n    // Calculate parameters for the beta-curve\n    // Reference https://www.riskamp.com/beta-pert#the-beta-pert-distribution-in-r\n    // Handy, since the probability-distributions code provides the same API as R\n\n    const range = maximum - minimum;\n    const mu = (minimum + maximum + height * mode) / (height + 2);\n    var v;\n    if (mu === mode) {\n      v = height / 2 + 1;\n    } else {\n      v =\n        (mu - minimum) * (2 * mode - minimum - maximum) / ((mode - mu) * range);\n    }\n\n    const w = v * (maximum - mu) / (mu - minimum);\n\n    // Variables we need for the sampling\n    this.betaParams = {\n      v: v,\n      w: w,\n      range: range,\n      minimum: minimum,\n    };\n  }\n\n  sample() {\n    var { v, w, range, minimum } = this.betaParams;\n    return PD.rbeta(1, v, w)[0] * range + minimum;\n  }\n}\n\nexport default PERT;\n","import PD from 'probability-distributions';\n\nclass Gaussian {\n  constructor({ mean, sd }) {\n    this.mean = mean;\n    this.sd = sd;\n  }\n\n  sample() {\n    return PD.rnorm(1, this.mean, this.sd)[0];\n  }\n}\n\nexport default Gaussian;\n","import DistributionRegistry from './DistributionRegistry';\n\nfunction distributions(epic) {\n  const result = {};\n  const parametersObject = epic['parameters'];\n  for (const distributionName in parametersObject) {\n    const parameters = parametersObject[distributionName];\n    result[distributionName] = new DistributionRegistry[distributionName](\n      parameters\n    );\n  }\n  return result;\n}\n\nfunction generateEpicResults(epics, iterations) {\n  const epicResults = [];\n  for (const epic of epics) {\n    const epicResult = {};\n    const epicDistributions = distributions(epic);\n    for (const distributionName in epicDistributions) {\n      const distribution = epicDistributions[distributionName];\n      epicResult[distributionName] = Array.from({ length: iterations }, () =>\n        distribution.sample()\n      ).sort(function(a, b) {\n        return a - b;\n      });\n    }\n    epicResults.push(epicResult);\n  }\n\n  return epicResults;\n}\n\nfunction generateProjectResults(epics, projects, iterations) {\n  const projectResults = [];\n  for (const project of projects) {\n    const projectDistributions = {};\n    for (const [epicIndex, count] of project['epics'].entries()) {\n      const epic = epics[epicIndex];\n      const epicDistributions = distributions(epic);\n      for (const distributionName in epicDistributions) {\n        const distribution = epicDistributions[distributionName];\n        if (!(distributionName in projectDistributions)) {\n          projectDistributions[distributionName] = [];\n        }\n        for (var i = 0; i < count; i++) {\n          projectDistributions[distributionName].push(distribution);\n        }\n      }\n    }\n    const projectResult = {};\n    for (const distributionName in projectDistributions) {\n      const distributions = projectDistributions[distributionName];\n      projectResult[distributionName] = Array.from(\n        { length: iterations },\n        () => {\n          return distributions.reduce((accumulator, distribution) => {\n            return accumulator + distribution.sample();\n          }, 0);\n        }\n      ).sort(function(a, b) {\n        return a - b;\n      });\n    }\n    projectResults.push(projectResult);\n  }\n\n  return projectResults;\n}\n\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round#A_better_solution\nfunction round(number, precision) {\n  var shift = function(number, precision, reverseShift) {\n    if (reverseShift) {\n      precision = -precision;\n    }\n    const numArray = ('' + number).split('e');\n    return +(\n      numArray[0] +\n      'e' +\n      (numArray[1] ? +numArray[1] + precision : precision)\n    );\n  };\n  return shift(Math.round(shift(number, precision, false)), precision, true);\n}\n\n// Based on https://en.wikipedia.org/wiki/Percentile#The_nearest-rank_method\nfunction percentile(array, percentile) {\n  if (percentile <= 0) {\n    return array[0];\n  }\n  if (percentile >= 100) {\n    return array[array.length - 1];\n  }\n  const rank = Math.ceil(percentile / 100 * array.length);\n  return array[rank];\n}\n\nexport { generateEpicResults, generateProjectResults, round, percentile };\n","import React, { Component } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport { round, percentile } from './data';\n\nimport styles from './Graph.module.scss';\n\nfunction tooltipValueFormatter(params) {\n  return params.seriesName + ': ' + params.value[1] + '%';\n}\n\nfunction tooltipFormatter(paramsList) {\n  // Ordering in the tool tip varies by which graph we're over\n  const pertFirst = paramsList[0].seriesName === 'PERT';\n  const pertParams = paramsList[pertFirst ? 0 : 1];\n  const gaussianParams = paramsList[pertFirst ? 1 : 0];\n  return (\n    '' +\n    pertParams.value[0] +\n    ' days:<br/>' +\n    tooltipValueFormatter(pertParams) +\n    '<br/>' +\n    tooltipValueFormatter(gaussianParams)\n  );\n}\n\nclass Graph extends Component {\n  render() {\n    return (\n      <div className={styles.graph}>\n        <p>Rendering {this.props.label}</p>\n        <ReactEcharts style={{ height: '600px' }} option={this.getOption()} />\n      </div>\n    );\n  }\n\n  getOption() {\n    const pertResults = this.props.results['PERT'];\n    const pertRoundedValues = pertResults.map(x => round(x, 2));\n    const pertPercentages = this.countHitsAsPercentage(pertRoundedValues);\n    const pertGrid = { top: '10%', bottom: '40%', height: '30%' };\n    const pertMarkLines = this.generateMarkLines(\n      pertResults,\n      pertGrid['bottom'],\n      pertGrid['top']\n    );\n\n    const gaussianResults = this.props.results['Gaussian'];\n    const gaussianRoundedValues = gaussianResults.map(x => round(x, 2));\n    const gaussianPercentages = this.countHitsAsPercentage(\n      gaussianRoundedValues\n    );\n    const gaussianGrid = { top: '60%', bottom: '90%', height: '30%' };\n    const gaussianMarkLines = this.generateMarkLines(\n      gaussianResults,\n      gaussianGrid['bottom'],\n      gaussianGrid['top']\n    );\n\n    const minLength = Math.min(...pertRoundedValues, ...gaussianRoundedValues);\n    const maxLength = Math.max(...pertRoundedValues, ...gaussianRoundedValues);\n\n    return {\n      legend: { selectedMode: false },\n      tooltip: {\n        trigger: 'axis',\n        formatter: tooltipFormatter,\n      },\n      axisPointer: {\n        link: { xAxisIndex: 'all' },\n      },\n      dataset: [\n        {\n          source: pertPercentages,\n          dimensions: [null, 'PERT'],\n        },\n        {\n          source: gaussianPercentages,\n          dimensions: [null, 'Gaussian'],\n        },\n      ],\n      grid: [pertGrid, gaussianGrid],\n      xAxis: [\n        {\n          type: 'value',\n          min: minLength,\n          max: maxLength,\n          axisPointer: { show: true },\n          axisLabel: { formatter: '{value}d' },\n        },\n        {\n          type: 'value',\n          gridIndex: 1,\n          min: minLength,\n          max: maxLength,\n          axisPointer: { show: true },\n          axisLabel: { formatter: '{value}d' },\n        },\n      ],\n      yAxis: [\n        { axisLabel: { formatter: '{value}%' } },\n        { gridIndex: 1, axisLabel: { formatter: '{value}%' } },\n      ],\n      series: [\n        {\n          type: 'bar',\n          markLine: {\n            lineStyle: { color: 'black' },\n            silent: true,\n            data: pertMarkLines,\n          },\n        },\n        {\n          type: 'bar',\n          datasetIndex: 1,\n          xAxisIndex: 1,\n          yAxisIndex: 1,\n          markLine: {\n            lineStyle: { color: 'black' },\n            silent: true,\n            data: gaussianMarkLines,\n          },\n        },\n      ],\n    };\n  }\n\n  countHitsAsPercentage(values) {\n    // https://stackoverflow.com/a/35101824/166389\n    // Although returns the list of key/value pairs, not a Map\n    const count = values.length;\n    return [...new Set(values)].map(x => [\n      x,\n      (values.filter(y => y === x).length * 100) / count,\n    ]);\n  }\n\n  generateMarkLines(values, minY, maxY) {\n    const percentiles = [3, 50, 80, 97];\n    const percentileLabels = ['3rd', '50th', '80th', '97th'];\n\n    const result = [];\n    percentiles.forEach((percentileValue, index) => {\n      const value = round(percentile(values, percentileValue), 2);\n      result.push([\n        { xAxis: value, y: minY, name: percentileLabels[index] },\n        { xAxis: value, y: maxY },\n      ]);\n    });\n    return result;\n  }\n}\n\nexport default Graph;\n","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nclass ProjectEditModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      project: this.props.project,\n    };\n\n    this.handleChangeID = this.handleChangeID.bind(this);\n    this.handleChangeEpic = this.handleChangeEpic.bind(this);\n    this.handleOkay = this.handleOkay.bind(this);\n  }\n\n  handleChangeID(event) {\n    const newID = event.target.value;\n    this.setState((prevState, props) => {\n      const newProject = Object.assign({}, prevState.project, {\n        id: newID,\n      });\n      return { project: newProject };\n    });\n  }\n\n  handleChangeEpic(epicIndex, event) {\n    const newValue = event.target.valueAsNumber;\n    this.setState((prevState, props) => {\n      const newProject = Object.assign({}, prevState.project, {\n        epics: prevState.project.epics.map(\n          (value, index) => (index === epicIndex ? newValue : value)\n        ),\n      });\n      return { project: newProject };\n    });\n  }\n\n  handleOkay() {\n    this.props.onUpdate(this.state.project);\n  }\n\n  render() {\n    const epicInputs = [];\n    this.props.epics.forEach((epic, index) => {\n      epicInputs.push(\n        <div key={index}>\n          {epic.size}:\n          <input\n            type=\"number\"\n            value={this.state.project.epics[index]}\n            onChange={event => this.handleChangeEpic(index, event)}\n            min={0}\n          />\n        </div>\n      );\n    });\n\n    return (\n      <ReactModal isOpen={true}>\n        <div>\n          Project ID:\n          <input\n            type=\"text\"\n            value={this.state.project.id}\n            onChange={this.handleChangeID}\n          />\n        </div>\n        {epicInputs}\n        <div>\n          <button onClick={this.handleOkay}>Okay</button>\n          <button onClick={this.props.onCancel}>Cancel</button>\n        </div>\n      </ReactModal>\n    );\n  }\n}\n\nexport default ProjectEditModal;\n","import React, { Component } from 'react';\nimport { percentile, round } from './data';\nimport styles from './Project.module.scss';\n\nfunction renderPercentiles(results) {\n  return (\n    <>\n      <td>{round(percentile(results, 3), 1)}</td>\n      <td>{round(percentile(results, 50), 1)}</td>\n      <td>{round(percentile(results, 80), 1)}</td>\n      <td>{round(percentile(results, 97), 1)}</td>\n    </>\n  );\n}\n\nclass Project extends Component {\n  renderPERTPercentiles() {\n    return renderPercentiles(this.props.results.PERT);\n  }\n\n  renderGaussianPercentiles() {\n    return renderPercentiles(this.props.results.Gaussian);\n  }\n\n  render() {\n    const epicCounts = [];\n    const project = this.props.project;\n    project.epics.forEach((count, index) => {\n      epicCounts.push(<td key={index}>{count}</td>);\n    });\n    return (\n      <tr className={this.props.selected ? styles.selected : undefined}>\n        <td>{project.id}</td>\n        {epicCounts}\n        {this.renderPERTPercentiles()}\n        {this.renderGaussianPercentiles()}\n        <td>\n          <button onClick={this.props.onEdit}>Edit...</button>\n          <button onClick={this.props.onDelete}>Delete</button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default Project;\n","import React, { Component } from 'react';\nimport styles from './ProjectList.module.scss';\nimport Project from './Project';\n\nclass ProjectList extends Component {\n  render() {\n    const epicHeaders = [];\n    this.props.epics.forEach((epic, index) => {\n      epicHeaders.push(<th key={index}>{epic.size}</th>);\n    });\n    const projects = [];\n    this.props.projects.forEach((project, index) => {\n      projects.push(\n        <Project\n          key={project.id}\n          project={project}\n          epics={this.props.epics}\n          results={this.props.results[index]}\n          selected={index === this.props.selected}\n          onEdit={() => this.props.onProjectEdit(project.id)}\n          onDelete={() => this.props.onProjectDelete(project.id)}\n        />\n      );\n    });\n    return (\n      <div className={styles.ProjectList}>\n        <h2>Projects</h2>\n        <table>\n          <thead>\n            <tr>\n              <th rowSpan=\"3\">ID</th>\n              <th colSpan={epicHeaders.length}>Parameters</th>\n              <th colSpan=\"8\">Percentiles</th>\n              <th rowSpan=\"3\">Actions</th>\n            </tr>\n            <tr>\n              <th colSpan={epicHeaders.length}>Epics</th>\n              <th colSpan=\"4\">PERT</th>\n              <th colSpan=\"4\">Gaussian</th>\n            </tr>\n            <tr>\n              {epicHeaders}\n              <th>3rd</th>\n              <th>50th</th>\n              <th>80th</th>\n              <th>97th</th>\n              <th>3rd</th>\n              <th>50th</th>\n              <th>80th</th>\n              <th>97th</th>\n            </tr>\n          </thead>\n          <tbody>{projects}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Graph from './Graph';\nimport ProjectEditModal from './ProjectEditModal';\nimport ProjectList from './ProjectList';\nimport { generateProjectResults } from './data';\n\nclass ProjectDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      iterations: 2000,\n      projects: [\n        { id: 1, epics: [1, 0, 0, 0, 0] },\n        { id: 2, epics: [0, 1, 0, 0, 0] },\n        { id: 3, epics: [0, 0, 1, 0, 0] },\n        { id: 4, epics: [0, 0, 0, 1, 0] },\n        { id: 5, epics: [0, 0, 0, 0, 1] },\n        { id: 6, epics: [1, 1, 1, 1, 1] },\n      ],\n      editProjectID: null,\n    };\n\n    this.handleProjectEdit = this.handleProjectEdit.bind(this);\n    this.handleProjectEditCancel = this.handleProjectEditCancel.bind(this);\n    this.handleProjectEditUpdate = this.handleProjectEditUpdate.bind(this);\n    this.handleProjectDelete = this.handleProjectDelete.bind(this);\n  }\n\n  handleProjectEdit(projectID) {\n    this.setState({ editProjectID: projectID });\n  }\n\n  handleProjectEditCancel() {\n    this.setState({ editProjectID: null });\n  }\n\n  handleProjectEditUpdate(updatedProject) {\n    this.setState((prevState, props) => {\n      const newProjects = prevState.projects.map(\n        project =>\n          project.id === prevState.editProjectID ? updatedProject : project\n      );\n      return { projects: newProjects, editProjectID: null };\n    });\n  }\n\n  handleProjectDelete(projectID) {\n    this.setState((prevState, props) => {\n      const newProjects = prevState.projects.filter(\n        project => project.id !== projectID\n      );\n      return { projects: newProjects };\n    });\n  }\n\n  render() {\n    const selected = this.state.selected;\n    const iterations = this.state.iterations;\n    const projects = this.state.projects;\n    const epics = this.props.epics;\n\n    const results = generateProjectResults(epics, projects, iterations);\n    const selectedProjects = projects[selected];\n    const selectedResults = results[selected];\n\n    const editing = this.state.editProjectID !== null;\n    const editProject = editing\n      ? this.state.projects.find(\n          project => project.id === this.state.editProjectID\n        )\n      : null;\n\n    return (\n      <div>\n        <Graph\n          label={'Project ' + selectedProjects.id}\n          results={selectedResults}\n        />\n        <ProjectList\n          epics={epics}\n          projects={projects}\n          results={results}\n          selected={selected}\n          onProjectEdit={this.handleProjectEdit}\n          onProjectDelete={this.handleProjectDelete}\n        />\n        {editing && (\n          <ProjectEditModal\n            epics={epics}\n            project={editProject}\n            onUpdate={this.handleProjectEditUpdate}\n            onCancel={this.handleProjectEditCancel}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProjectDisplay;\n","import React, { Component } from 'react';\nimport { percentile, round } from './data';\nimport styles from './Epic.module.scss';\n\nfunction renderPercentiles(results) {\n  return (\n    <>\n      <td>{round(percentile(results, 3), 1)}</td>\n      <td>{round(percentile(results, 50), 1)}</td>\n      <td>{round(percentile(results, 80), 1)}</td>\n      <td>{round(percentile(results, 97), 1)}</td>\n    </>\n  );\n}\n\nclass Epic extends Component {\n  renderPERT() {\n    const parameters = this.props.epic.parameters.PERT;\n    return (\n      <>\n        <td>{parameters.minimum}</td>\n        <td>{parameters.maximum}</td>\n        <td>{parameters.mode}</td>\n        <td>{parameters.height}</td>\n      </>\n    );\n  }\n\n  renderPERTPercentiles() {\n    return renderPercentiles(this.props.results.PERT);\n  }\n\n  renderGaussian() {\n    const parameters = this.props.epic.parameters.Gaussian;\n    return (\n      <>\n        <td>{parameters.mean}</td>\n        <td>{parameters.sd}</td>\n      </>\n    );\n  }\n\n  renderGaussianPercentiles() {\n    return renderPercentiles(this.props.results.Gaussian);\n  }\n\n  render() {\n    return (\n      <tr className={this.props.selected ? styles.selected : undefined}>\n        <td>{this.props.epic.size}</td>\n        {this.renderPERT()}\n        {this.renderGaussian()}\n        {this.renderPERTPercentiles()}\n        {this.renderGaussianPercentiles()}\n      </tr>\n    );\n  }\n}\n\nexport default Epic;\n","import React, { Component } from 'react';\nimport styles from './EpicList.module.scss';\nimport Epic from './Epic';\n\nclass EpicList extends Component {\n  render() {\n    const epics = [];\n    this.props.epics.forEach((epic, index) => {\n      epics.push(\n        <Epic\n          key={index}\n          epic={epic}\n          results={this.props.results[index]}\n          selected={index === this.props.selected ? true : false}\n        />\n      );\n    });\n\n    return (\n      <div className={styles.epicList}>\n        <h2>Epics</h2>\n        <table>\n          <thead>\n            <tr>\n              <th rowSpan=\"3\">Size</th>\n              <th colSpan=\"6\">Parameters</th>\n              <th colSpan=\"8\">Percentiles</th>\n            </tr>\n            <tr>\n              <th colSpan=\"4\">PERT</th>\n              <th colSpan=\"2\">Gaussian</th>\n              <th colSpan=\"4\">PERT</th>\n              <th colSpan=\"4\">Gaussian</th>\n            </tr>\n            <tr>\n              <th>Min</th>\n              <th>Max</th>\n              <th>Mode</th>\n              <th>Height</th>\n              <th>Mean</th>\n              <th>Std. dev.</th>\n              <th>3rd</th>\n              <th>50th</th>\n              <th>80th</th>\n              <th>97th</th>\n              <th>3rd</th>\n              <th>50th</th>\n              <th>80th</th>\n              <th>97th</th>\n            </tr>\n          </thead>\n          <tbody>{epics}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default EpicList;\n","import React, { Component } from 'react';\nimport Graph from './Graph';\nimport EpicList from './EpicList';\nimport { generateEpicResults } from './data';\n\nclass EpicDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      iterations: 2000,\n    };\n  }\n  render() {\n    // State\n    const selected = this.state.selected;\n    const iterations = this.state.iterations;\n\n    const epics = this.props.epics;\n    const results = generateEpicResults(epics, iterations);\n    const selectedEpics = epics[selected];\n    const selectedResults = results[selected];\n\n    return (\n      <div>\n        <Graph\n          label={'Epic: ' + selectedEpics.size}\n          results={selectedResults}\n        />\n        <EpicList epics={epics} results={results} selected={selected} />\n      </div>\n    );\n  }\n}\n\nexport default EpicDisplay;\n","import React, { Component } from 'react';\nimport styles from './App.module.scss';\nimport ProjectDisplay from './ProjectDisplay';\nimport EpicDisplay from './EpicDisplay';\n\nclass App extends Component {\n  render() {\n    // Future state\n    const EPICS = [\n      {\n        size: 'XS',\n        parameters: {\n          PERT: { minimum: 4, mode: 5, maximum: 10, height: 24 },\n          Gaussian: { mean: 5, sd: 0.5 },\n        },\n      },\n      {\n        size: 'S',\n        parameters: {\n          PERT: { minimum: 7, mode: 9, maximum: 25, height: 15 },\n          Gaussian: { mean: 9, sd: 0.9 },\n        },\n      },\n      {\n        size: 'M',\n        parameters: {\n          PERT: { minimum: 15, mode: 16, maximum: 40, height: 8 },\n          Gaussian: { mean: 16, sd: 1.6 },\n        },\n      },\n      {\n        size: 'L',\n        parameters: {\n          PERT: { minimum: 25, mode: 30, maximum: 60, height: 4 },\n          Gaussian: { mean: 30, sd: 3 },\n        },\n      },\n      {\n        size: 'XL',\n        parameters: {\n          PERT: { minimum: 50, mode: 50, maximum: 100, height: 1 },\n          Gaussian: { mean: 50, sd: 5 },\n        },\n      },\n    ];\n\n    return (\n      <div className={styles.App}>\n        <header className={styles.header}>\n          <h1 className={styles.title}>Stefano's Monte Carlo thing</h1>\n        </header>\n        <div className={styles.left}>\n          <ProjectDisplay epics={EPICS} />\n        </div>\n        <div className={styles.right}>\n          <EpicDisplay epics={EPICS} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport './index.scss';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactModal.setAppElement('#root');\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3YWDd\",\"header\":\"App_header__2naLA\",\"title\":\"App_title__2-v5l\",\"intro\":\"App_intro__2KEDq\",\"left\":\"App_left__1nDSU\",\"right\":\"App_right__3Fzzm\"};"],"sourceRoot":""}